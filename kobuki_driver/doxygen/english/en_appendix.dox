/**

@page enAppendixGuideProtocol Appendix : Protocol Specification

@tableofcontents

<!--@section enProtocolSpecification Protocol Specification-->

@section enOverview Overview

The @ref kobuki::Kobuki "kobuki driver" communicates with the robot by using predefined protocol. In general, the driver sends the commands to the robot and the robot sends some feedback data or sensor readings. These commands and feedback data are converted into a bytestream for communication via serial interface. The protocol specifies that rules and forms of bytestreams.

@section enBytestream Structure of Bytestream

<table>
<tr align="center"><th>Name</th><td>Header 0</td><td>Header 1</td><td>Length</td><td>Payload</td><td>Checksum</td>
<tr align="center"><th>Size</th><td>1 Byte</td><td>1 Byte</td><td>1 Byte</td><td>N Byte(s)</td><td>1 Byte</td>
<tr align="center"><th align="center">Description</th><td width="100">0xAA<br>(Fixed)</td><td width="100">0x55<br>(Fixed)</td><td width="100">Size of payload in bytes</td><td width="100">Described below</td><td width="100">XOR'ed value of every bytes of entire packet</td>
</table>


@subsection enHeader Header

Two bytes of header 0 and hader 1 is fixed value for headings in every bytestreams, commands and feedback data. Headers are used to detect the start of bytestream.

@subsection enLength Length

Length indicated the length of following payload. It's size is 1 by default. Length can be used to distinguish each bytestream. Minimum value of this byte is 3.

@subsection enPayload Payload

Payload contains actual data of bytestream.

@subsubsection enStructureOfPayload Structure Of Payload
<!--@par <b>Structure of Payload</b>-->

Payload is a consist of several sub-payloads.

@par
<table>
<tr align="center"><th>Payload</th><td colspan="5">Payload</td></tr>
<tr align="center"><th>Sub-Payloads</th><td>Sub-Payload 1</td><td>Sub-Payload 2</td><td>Sub-Payload 3</td><td>...</td><td>Sub-Payload N</td></tr>
</table>

@subsubsection enStructureOfSubPayloads Structure Of Sub-Payloads
<!--@par<b>Stucture of Sub-Payloads</b>-->

Sub-payload can be devided into three parts, Header, Length and Data.

@par
<table>
<tr align="center"><th>Name</th><td>Header</td><td>Length</td><td>Data</td>
<tr align="center"><th>Size</th><td>1 Byte</td><td>1 Byte</td><td>N Byte(s)</td>
<tr align="center"><th align="center">Description</th><td width="100">Predefined Identifier</td><td width="100">Size of data in byte(s)</td><td width="100">Described below</td>
</table>

@subsection enChecksum Checksum

Checksum is XOR'ed value of entire bytestream. Checksum process ensure the integrity of bytestreams.

@section enDataTypes Data Types

Data field in Sub-payload is a mixture of below three data types; byte, short and int.

<table>
<tr align="center"><th>Name</th><th>Description</th><th>Byte Length</th><th>Bit Length</th><th>Data Range</th><th colspan="2">C/C++ Identifier</th></tr>
<tr align="center"><td>Unsigned Byte</td><td>8-bit unsigned integer</td><td>1</td><td>8</td><td>0~255</td><td>unsigend char</td><td>uint8_t</td></tr>
<tr align="center"><td>Unsigned Short</td><td>16-bit unsigned integer</td><td>2</td><td>16</td><td>0~65,535</td><td>unsigend short</td><td>uint16_t</td></tr>
<tr align="center"><td>Unsigned Int</td><td>32-bit unsigned integer</td><td>4</td><td>32</td><td>0~4,294,967,295</td><td>unsigend int</td><td>uint32_t</td>	</tr>
</table>

@subsection enSerderialization SerDeserialization

<a href="http://en.wikipedia.org/wiki/Serialization">Serialization</a> is the process of convering a data sturcture into a bytestream.

Each data types are serialized and deserialized by `<a href="http://en.wikipedia.org/wiki/Least_significant_byte">LSB</a>-First Order`. It means Least Significant Bytes will comes first on the bytestream.

Here are example code to handle it on kobuki_deriver, @ref packet_handler::payloadBase::buildVariable(T & V, ecl::PushAndPop<unsigned char> & buffer) "buildVariable()" and @ref packet_handler::payloadBase::buildBytes(const T & V, ecl::PushAndPop<unsigned char> & buffer) "buildBytes()".

@section enCommandPackets Command Packets

@subsection enCommandIdentifier Command Identifier

<table>
<tr><th>ID</th><th>Name</th><th>Description</th></tr>
<tr><td align="center">1</td><td>Base Control</td><td></td></tr>
<tr><td align="center">2</td><td><i>Reserved</i></td><td></td></tr>
<tr><td align="center">3</td><td>Reserved</td><td></td></tr>
<tr><td align="center">4</td><td>Sound Sequence</td><td></td></tr>
<tr><td align="center">5</td><td><i>Reserved</i></td><td></td></tr>
<tr><td align="center">6</td><td><i>Reserved</i></td><td></td></tr>
<tr><td align="center">7</td><td><i>Reserved</i></td><td></td></tr>
<tr><td align="center">8</td><td>Set Power</td><td></td></tr>
<tr><td align="center">9</td><td>Request Extra</td><td></td></tr>
<tr><td align="center">10</td><td>Reserved</td><td></td></tr>
<tr><td align="center">11</td><td>Reserved</td><td></td></tr>
<tr><td align="center">12</td><td>General Purpose Output</td><td></td></tr>
</table>

@subsection enBaseControl Base Control

<table>
<tr><th></th><th>Name</th><th width="40">Size</th><th width="40">Value</th><th>Value in Hex</th><th>Description</th></tr>
<tr><th>Header</th><td>Identifier</td><td align="center">1</td><td align="center">1</td><td>0x01</td><td>Fixed</td></tr>
<tr><th>Length</th><td>Legnth of Data</td><td align="center">1</td><td align="center">4</td><td>0x04</td><td>Fixed</td></tr>
<tr><th rowspan="2">Data</th><td>Speed</td><td align="center">2</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Radius</td><td align="center">2</td><td align="center"></td><td></td><td></td></tr>

</table>

@section enFeedbackPackets Feedback Packets

@subsection enFeedbackIdentifier Feedback Identifier

<table>
<tr><th>ID</th><th>Name</th><th>Description</th><th>Default</th></tr>
<tr><td align="center">1</td><td>Basic Sensor Data</td><td></td><td>V</td></tr>
<tr><td align="center">2</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">3</td><td>Docking IR</td><td></td><td>V</td></tr>
<tr><td align="center">4</td><td>Inertial Sensor</td><td></td><td>V</td></tr>
<tr><td align="center">5</td><td>Cliff</td><td></td><td>V</td></tr>
<tr><td align="center">6</td><td>Current</td><td></td><td>V</td></tr>
<tr><td align="center">7</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">8</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">9</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">10</td><td>Hardware Version</td><td></td><td></td></tr>
<tr><td align="center">11</td><td>Firmware Version</td><td></td><td></td></tr>
<tr><td align="center">12</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">13</td><td>Raw data of 3-axis gyro</td><td></td><td>V</td></tr>
<tr><td align="center">14</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">15</td><td>Reserved</td><td></td><td></td></tr>
<tr><td align="center">16</td><td>General Purpose Input</td><td></td><td>V</td></tr>
<tr><td align="center">17</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">18</td><td><i>Reserved</i></td><td></td><td></td></tr>
<tr><td align="center">19</td><td>Unique Device IDentifier</td><td></td><td></td></tr>
<tr><td align="center">20</td><td><i>Reserved</i></td><td></td><td></td></tr>
</table>

@subsection enBasicSensorData Basic Sensor Data

<table>
<tr><th></th><th>Name</th><th width="40">Size</th><th width="40">Value</th><th>Value in Hex</th><th>Description</th></tr>
<tr><th>Header</th><td>Feedback Identifier</td><td align="center">1</td><td align="center">1</td><td>0x01</td><td>Fixed</td></tr>
<tr><th>Length</th><td>Legnth of Data</td><td align="center">1</td><td align="center">15</td><td>0x0F</td><td>Fixed</td></tr>
<tr><th rowspan="12">Data</th><td>Time Stamp</td><td align="center">2</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Bump</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Wheel Drop</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Cliff</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Left Encoder</td><td align="center">2</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Right Encoder</td><td align="center">2</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Left PWM</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Right PWM</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Button</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Charger</td><td align="center">1</td><td align="center"></td><td></td><td></td></tr>
<tr><td>Battery</td><td align="center">1</td><td align="center"></td><td></td><td>In 0.1V</td></tr>
<tr><td>Over Current</td><td align="center">1</td><td align="center"></td><td></td><td>In 20mA/LSB</td></tr>
</table>

@section enSandbox Sandbox

@par
	Some commentary to accompany
	the first list in the <a href="http://www.stack.nl/~dimitri/doxygen/docblocks.html">Special
	Documentation Blocks</a> section of
	the Doxygen manual:

Hmm.. Tables..




**/
