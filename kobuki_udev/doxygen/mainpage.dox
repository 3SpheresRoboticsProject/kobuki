/**
\mainpage
\htmlinclude manifest.html

@section Overview

- Yujin flashes a serial id, 'kobuki' into the chip's eeprom at the factory.
- Users copy across the udef rule '57-kobuki.rules' to /etc/udev/rules.d
- Plug in kobuki, i twill appear on /dev/kobuki

@subsection eeProm Programming the Eeprom

- Plug in the device
- Compile the package and execute ftdi_kobuki

If it is the only ftdi device plugged in, simply

@code
> rosdep install kobuki_udev
> roscd kobuki_udev
> make
> ./bin/ftdi_koboku
@endcode

will do the job, if not - optionally add an argument with the current serial id of the ftdi
chip you want to flash to the last command. 

If things go bums up, then you will find an eeprom.backup saved in your current directory that you
can reflash back to the chip (using ./ftdi_write_eeprom).

@subsection udev Preparing Udev

@code
> roscd kobuki
> sudo cp 57-kobuki.rules /etc/udev/rules.d
> sudo /etc/init.d/udev restart
@endcode

@section Issues

<b>WILL NOT WORK WITH libftdi 0.17!!!</b>

libftdi needs to be upgraded to work for TYPE_R (can see FT232R on the iInterface variable in lsusb) ftdi chips.
To workaround on lucid, simply uninstall ftdi and download the sources for version 0.2/0.3 and above (might also work
on 0.18 from emails I've read).

- http://www.intra2net.com/en/developer/libftdi/download.php

Might work out of the box on oneiric, but I haven't tried.

@section Notes

- @ref lsusbdataGuide "Our Chip" : important specifications and data for our chip (mostly gathered from lsusb -v). 
- src/ftdi_kobuki.cpp : primary utility, reads the device eeprom, converts strings for kobuki, and reflashes.
- src/ftdi_read_eeprom.cpp : reads and saves a device's eeprom to binary file on pc.
- src/ftdi_scan.cpp : scans ftdi devices for the serial strings.
- src/ftdi_write_eeprom.cpp : writes a backed up eeprom binary to the device.

@section utilities System Utilities

@subsection lsusb

Make sure you use sudo, if not, it will only retrieve part of the information.
@code
> sudo lsusb
# Get the two numbers to the left of the ftdi device (bus and ?? number) (e.g. 002, 007)
> sudo lsusb -v -s 002:007
@endcode

@subsection udevadm

Much more detailed information of a currently connected device.

@code
udevadm info -a --name /dev/ttyUSB0
@endcode

*/
